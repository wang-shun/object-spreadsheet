body { 
  margin: 0;
  height: 100vh;
}

h1 { margin-top: 0px; padding-top: 9px; }

#ViewWrapper {
  box-sizing: border-box;
  padding: 5px 5px 0 5px;
  width: 100%;
  height: calc(100% - 100px);
}
/* This is terrible, but I tried flexbox and tables and wasn't able to get the
   correct scrolling behavior (and the table not bleeding into the padding when
   it scrolls) any other way. ~ Matt 2015-10-29 */
#ViewWrapper.actionBarExpanded {
  height: calc(100% - 300px);
}
#View {
  width: 100%;
  height: 100%;
}

@media screen {
.tableSeparator {
  background: -moz-linear-gradient(left, rgba(255,255,255,0) 0%,rgba(220,220,220,0.1) 50%,rgba(220,220,220,0.5) 100%); /* Chrome10+,Safari5.1+ */
  background: -webkit-linear-gradient(left, rgba(255,255,255,0) 0%,rgba(220,220,220,0.1) 50%,rgba(220,220,220,0.5) 100%); /* Chrome10+,Safari5.1+ */
}
}

.tableSeparator {
  border-top: none !important;
  border-bottom: none !important;
}

.handsontable div.htContainer td.incomparable:not(.rsHeader) {
  /*
  Work around https://bugzilla.mozilla.org/show_bug.cgi?id=332740 in Firefox.
  Unfortunately, this takes a one-pixel bite out of some of the other borders.
  */
  border-right: 1px solid transparent;
}

.handsontable td.referent {
  box-shadow: inset 0px 0px 4px 3px #C9C;
  background-color: #FDF;
}

.handsontable td.referent-object {
  background-color: #FFE0FF;
}
.reference {
  text-decoration: underline;
}

.handsontable td.selected-object {
  background-color: #FFD;
}

.handsontable td.pending {
  position: relative;
  background-color: #FFF8EE;
}
.handsontable td.pending::before {
  content: " ";
  position: absolute;
  height: 100%;
  width: 6px;
  background: #FFE0AE;
  right: 0;
  top: 0;
}

/*
Override some Handsontable styles.  div.wtHolder is an extra selector that
will always match, just to get higher priority.
*/
.handsontable div.wtHolder td {
  /* Allow height to be determined by settings. */
  height: auto;
}
.handsontable div.wtHolder table.htCore {
  /*
  Allows the right border of a cell to be used interchangeably with the left
  border of the next cell to the right, and similarly for horizontal borders;
  otherwise, the borders would be slightly misaligned.  This is used for
  rsHeaderCorner.
  */
  /*
  This solution has severe drawbacks as it conflicts with assumptions in Handsontable
  (see handsontable.full.css), so a better one should be found. ~~~~
  */
  /*border-collapse: collapse;*/
}
.handsontable table.htCore {
  /* Adding div.htContainer to the above selector results in incorrect column widths
     (Handsontable uses a ghost element to compute the width). TODO */
  font-family: Verdana, Helvetica, Arial, FreeSans, sans-serif;
  font-size: 12px;
}

@media print {
  .handsontable div.wtHolder table.htCore {
    border-collapse: collapse;  
  }
  .handsontable * {
    box-shadow: none !important;
  }
}

/*
Deviations in the header from the Handsontable standard of each cell having a
right and a bottom border:

- rsHeaderCorner has no bottom border.  Instead, all child leaves draw a top
  border.  For child leaves which are under padding cells rather than the
  corner, this is redundant with the padding cell's bottom border.
*/

.handsontable td.rsHeader.rsHeaderCorner {
  border-bottom: none;
}

.handsontable td.rsRoot {
  vertical-align: top;
  text-align: center;
  padding-left: 0px;
  padding-right: 0px;
}

.handsontable td.rsSentinel {
  border: 0px none !important;  /* !important is required because of "tr:first-child td" rule in handsontable */
}

.handsontable td.rsHeaderFieldNameLeaf {
  border-top: 1px solid #CCC;
}

.handsontable td.rsHeaderFieldNameKey {
  border-top: 1px solid #CCC;
}

/* Connect through to the symbol in the type row. */

.handsontable.showTypes td.rsHeaderFieldNameObject {
  border-bottom: none;
}

/*
- For a given object, all cells that span the object-name row except the last
  ("nonfinal" cells) are either separator or rsHeaderNonfinal and have no right
  border.  For convenience, separators that don't span the object-name row also
  have no right border.  Instead, all the cells that can come after a separator
  (i.e., corner, leaf, and object) draw a left border.
*/

.handsontable td.rsHeaderNonfinal,
.handsontable td.rsHeader.separator {
  border-right: none;
}

.handsontable td.rsHeader.rsHeaderCorner,
.handsontable td.rsHeaderFieldNameLeaf,
.handsontable td.rsHeaderFieldNameObject,
.handsontable td.rsHeaderTypeLeaf,
.handsontable td.rsHeaderTypeObject {
  border-left: 1px solid #CCC;
}

/* Dotted border between object and key columns in header.  Control from the object side. */

.handsontable td.rsHeaderFieldNameKeyedObject,
.handsontable td.rsHeaderTypeKeyedObject {
  /* Let's be consistent with ".handsontable td.rsKeyedObject".  Change both if
     you really think this is better (it's hard for me to distinguish).
     ~ Matt 2015-10-29 */
  /*border-right: 1px solid rgba(204,204,204,0.4);*/
  border-right: 1px dashed #CCC;
}

/* Dotted border between object and key cells in body. */

.handsontable td.rsKeyedObject {
  border-right: 1px dashed #CCC;
}

/* Ideally we'd like the .handsontable td.area rule to just override this one,
   but there isn't a good way to write this one with lower specificity, so just
   exclude .area . */
.handsontable td.rsHeader:not(.tableSeparator):not(.area) {
  background-color: #EEE;
}

.handsontable.pal-rainbow td.rsHeaderDepth0:not(.area),
.handsontable.pal-rainbow .rsDepth0 {
  background-color: #FAA;
}
.handsontable.pal-rainbow td.rsHeaderDepth1:not(.area),
.handsontable.pal-rainbow .rsDepth1 {
  background-color: #FFA;
}
.handsontable.pal-rainbow td.rsHeaderDepth2:not(.area),
.handsontable.pal-rainbow .rsDepth2 {
  background-color: #AFA;
}
.handsontable.pal-rainbow td.rsHeaderDepth3:not(.area),
.handsontable.pal-rainbow .rsDepth3 {
  background-color: #AFF;
}
.handsontable.pal-rainbow td.rsHeaderDepth4:not(.area),
.handsontable.pal-rainbow .rsDepth4 {
  background-color: #AAF;
}
.handsontable.pal-rainbow td.rsHeaderDepth5:not(.area),
.handsontable.pal-rainbow .rsDepth5 {
  background-color: #FAF;
}
.handsontable.pal-rainbow td.rsCaption:not(.area) {
  background-color: #888;
  color: #FFF;
}
.handsontable.pal-rainbow button.headerCollapse {
  border-color: white !important;
  color: white;
}

.handsontable.pal-alternating td.rsHeaderDepth0:not(.area),
.handsontable.pal-alternating .rsDepth0 {
  background-color: #EEE;
}
.handsontable.pal-alternating td.rsHeaderDepth1:not(.area),
.handsontable.pal-alternating .rsDepth1 {
  background-color: #DDD;
}
.handsontable.pal-alternating td.rsHeaderMatch0:not(.area) { background-color: #FDD; }
.handsontable.pal-alternating td.rsHeaderMatch1:not(.area) { background-color: #FFD; }
.handsontable.pal-alternating td.rsHeaderMatch2:not(.area) { background-color: #DFD; }
/* This is what's distinguishable on my screen.  Sigh for superficial symmetry. ~ Matt 2015-12-04 */
.handsontable.pal-alternating td.rsHeaderMatch3:not(.area) { background-color: #DEF; }
.handsontable.pal-alternating td.rsHeaderMatch4:not(.area) { background-color: #FDF; }
/*
I tried this and it didn't look good. ~ Matt 2015-12-04
.handsontable.pal-alternating td.rsHeaderDepth0Match0:not(.area) { background-color: #FDD; }
.handsontable.pal-alternating td.rsHeaderDepth1Match0:not(.area) { background-color: #ECC; }
.handsontable.pal-alternating td.rsHeaderDepth0Match1:not(.area) { background-color: #FFD; }
.handsontable.pal-alternating td.rsHeaderDepth1Match1:not(.area) { background-color: #EEC; }
.handsontable.pal-alternating td.rsHeaderDepth0Match2:not(.area) { background-color: #DFD; }
.handsontable.pal-alternating td.rsHeaderDepth1Match2:not(.area) { background-color: #CEC; }
.handsontable.pal-alternating td.rsHeaderDepth0Match3:not(.area) { background-color: #DFF; }
.handsontable.pal-alternating td.rsHeaderDepth1Match3:not(.area) { background-color: #CEE; }
.handsontable.pal-alternating td.rsHeaderDepth0Match4:not(.area) { background-color: #DDF; }
.handsontable.pal-alternating td.rsHeaderDepth1Match4:not(.area) { background-color: #CCE; }
.handsontable.pal-alternating td.rsHeaderDepth0Match5:not(.area) { background-color: #FDF; }
.handsontable.pal-alternating td.rsHeaderDepth1Match5:not(.area) { background-color: #ECE; }
*/

.handsontable td.rsCaption:not(.area) {
  background-color: #DDD;
  color: #222;
}

.handsontable td.rsRowNum {
  text-align: center;
}

.handsontable td.centered {
  text-align: center;
  vertical-align: middle;
}

.handsontable td.leaf:not(.vlast) {
  border-bottom-style: dashed;
}

.handsontable td.separator:not(.rsHeader) {
  box-shadow: inset 0px 0px 1px 2px #EEE;
}

.handsontable td.dataPadding:not(.area):not(.selected-object):not(.pending) {
  background: #FBFBFB;
}
.handsontable td.dataPadding {
  box-shadow: inset 0px 0px 3px 2px #DDD;
}
.handsontable td.dataPadding.area {
  box-shadow: inset 0px 0px 3px 2px #CCF;
}
.handsontable td.dataPadding.selected-object {
  box-shadow: inset 0px 0px 3px 2px #E8E8A0;
}
.handsontable td.dataPadding.parent-root {
  border-right: 1px dashed #CCC;
  border-bottom: 1px dashed #CCC;
}

.handsontable td.dataError {
  color: #F00;
}

.handsontable button.headerCollapse {
  background: transparent;
  border: 1px solid #222 !important;
  color: #222;
  font-family: monospace;
  padding: 0 2px;
}

/* Ugly but at least recognizable. */
.rsDialog {
  background: rgba(0,0,0,0.1);
  border-radius: 10px;
}

.rsDialog label {
  font-family: sans-serif;
  font-size: smaller;
}

.rsDialog h1 {
  float: left;
  margin: 9px;
}

.formulaModified .CodeMirror {
  background-color: #FF0;
}

/* Something quick and dirty to clue users in to why we don't let them change
   the selection when they have unsaved formula changes.  Toss in enough
   selectors to have higher priority than the normal background for the palette.
*/
.selectionLock .handsontable td.rsHeader.current {
  background-color: #FF0;
}

.formulaBand {
  position: absolute;
  z-index: 1;
  box-sizing: border-box;
  border: 1px solid #FFF;
  background-color: #AAF;
}

.formulaBand:hover, .formulaBandSelected {
  background-color: #00F;
}

#ActionBar {
  box-sizing: border-box;
  /* NOTE: Keep the #ViewWrapper height rule consistent with all overrides of this. */
  height: 100px;
  padding: 9px;
  font-family: Verdana, Helvetica, Arial, FreeSans, sans-serif;
  font-size: 10pt;
  background: rgb(133,178,211); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(133,178,211,1) 0%, rgba(167,199,220,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(133,178,211,1)), color-stop(100%,rgba(167,199,220,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(133,178,211,1) 0%,rgba(167,199,220,1) 100%); /* Chrome10+,Safari5.1+ */
}

#ActionBar.actionBarExpanded {
  height: 300px;
}

#ActionBar label { color: #006; }

.labelBox {
  white-space: nowrap;
  width: 1px;
}

.buttonBox {
  white-space: nowrap;
  width: 1px;
  vertical-align: bottom;
  padding-left: 1em;
}

svg.formulaDebuggerToggle.closed {
  stroke: slategrey;
}

svg.formulaDebuggerToggle.open {
  stroke: white;
}

/*-------------------*/
/*  Used for Demos   */
/*-------------------*/

iframe.demo-ui {
  border: none;
  margin: 0;
  position: absolute;
  width: 100%;
  height: 50%;
  top: 0;
  left: 0;
}

iframe.demo-linked-sheet {
  border: none;
  margin: 0;
  position: absolute;
  width: 100%;
  height: 50%;
  bottom: 0;
  left: 0;
}

.demo-ptc-sheet-selector {
  position: absolute;
  width: 100%;
  height: 40px;
  top: 50%;
  left: 0;
}

iframe.demo-linked-sheet-ptc,
iframe.demo-linked-sheet-ptc-hidden
{
  border: none;
  margin: 0;
  position: absolute;
  width: 100%;
  height: calc(50% - 40px);
  bottom: 0;
  left: 0;
}

iframe.demo-linked-sheet-ptc-hidden {
  /* Keep it loaded */
  visibility: hidden;
}

/*-------------------*/
/* Presentation Mode */
/*-------------------*/

.present form label {
  font-size: 125%;
}

.present .formula {
  font-size: 150%;
  padding: 5px;
}

.present .handsontable td {
  /* padding-top: 5px; interferes with scrolling? */
}


